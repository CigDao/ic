cargo-clippy-linux:
  extends: .cargo-build-docker
  variables:
    BUILD_COMMAND: "$CI_PROJECT_DIR/gitlab-ci/src/rust_lint/lint.sh"

# Cargo is deprecated and will be replaced with Bazel.
# Until the migration is complete, run a simple check for build failures.
legacy-cargo-check:
  extends: .cargo-build-docker
  variables:
    BUILD_COMMAND: "cargo check --tests --benches"

cargo-build-release-linux:
  extends: 
  - .cargo-build-docker
  - .rules-parent-pipeline-protected-branch-only
  artifacts:
    paths:
      - artifacts/nix-release/*
  variables:
    BUILD_COMMAND: "cargo build --release"

cargo-build-release-darwin:
  extends: .cargo-build-macos
  artifacts:
    paths:
      - artifacts/nix-release/*
  variables:
    BUILD_COMMAND: "cargo build --release"
    BUILD_COMMAND_POST: "cd ${CI_PROJECT_DIR}/gitlab-ci/src && python3 -m artifacts.collect_build_binaries artifacts/nix-release; cd ${CI_PROJECT_DIR} && gitlab-ci/src/artifacts/rclone_upload.py --version='$CI_COMMIT_SHA' 'artifacts/nix-release' nix-release/x86_64-darwin"

dfx-build-release-darwin:
  extends: .cargo-build-macos
  artifacts:
    paths:
      - artifacts/sdk-release/*
  variables:
    BUILD_COMMAND: "${CI_PROJECT_DIR}/gitlab-ci/tools/build-dfx-binaries"
    BUILD_COMMAND_POST: "cd ${CI_PROJECT_DIR}/gitlab-ci/src && python3 -m artifacts.collect_build_binaries artifacts/sdk-release/x86_64-darwin; cd ${CI_PROJECT_DIR} && gitlab-ci/src/artifacts/rclone_upload.py --version='$CI_COMMIT_SHA' 'artifacts/sdk-release' sdk-release"

dfx-build-release-linux:
  extends:
    - .cargo-build-docker-protected
    - .rules-parent-pipeline-autorun-on-trigger
    - .ic-build-image
  artifacts:
    paths:
      - artifacts/sdk-release/*
  variables:
    BUILD_COMMAND: ""
    CARGO_BUILD_TARGET: x86_64-unknown-linux-gnu
    OPENSSL_INCLUDE_DIR: /usr/include/x86_64-linux-gnu
    OPENSSL_LIB_DIR: /usr/lib/x86_64-linux-gnu
    OPENSSL_STATIC: "1"
  script:
    - |
      set -eExuo pipefail

      # the pkg-config crate ignores requests to link statically if a dylib is available
      sudo rm /usr/lib/x86_64-linux-gnu/liblmdb.so*

      "${CI_PROJECT_DIR}/gitlab-ci/tools/build-dfx-binaries"

      pushd "${CI_PROJECT_DIR}/gitlab-ci/src"
      python3 -m artifacts.collect_build_binaries artifacts/sdk-release/x86_64-linux
      popd

      buildevents cmd "${ROOT_PIPELINE_ID}" "${CI_JOB_ID}" rclone -- \
        gitlab-ci/src/artifacts/rclone_upload.py --version="$CI_COMMIT_SHA" "artifacts/sdk-release" sdk-release
